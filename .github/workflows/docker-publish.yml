name: Build and Push Docker Image

on:
  # Automatic triggers
  push:
    branches: [develop, main]
    tags:
      - 'v*.*.*'  # Semantic version tags like v1.0.0

  # Manual trigger from GitHub Actions UI
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag to use (e.g., v1.0.0, develop, latest)'
        required: false
        default: 'manual'
      rebuild:
        description: 'Force rebuild even if image exists'
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Branch-based tags (develop, main)
            type=ref,event=branch

            # PR tags (pr-123)
            type=ref,event=pr

            # Version tags (v1.0.0 -> 1.0.0, latest)
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}

            # Manual trigger tag
            type=raw,value=${{ github.event.inputs.tag || 'manual' }},enable=${{ github.event_name == 'workflow_dispatch' }}

            # Git SHA for traceability
            type=sha,prefix={{branch}}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
