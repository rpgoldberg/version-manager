name: Security Vulnerability Scan

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # Scan dependencies for vulnerabilities
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner (repo mode)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          ignore-unfixed: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'dependency-scan'

      - name: Run Trivy for PR comment
        if: github.event_name == 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '1'

  # Scan Docker images for vulnerabilities
  container-scan:
    name: Container Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for scanning
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: version-manager:scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy container scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'version-manager:scan'
          format: 'sarif'
          output: 'container-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload container scan results
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: 'container-results.sarif'
          category: 'container-scan'

  # Run npm audit for additional coverage
  npm-audit:
    name: NPM Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --omit=dev
          echo "## NPM Audit Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          npm audit --omit=dev 2>&1 | head -50 >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Check for critical vulnerabilities
        run: |
          audit_output=$(npm audit --json --omit=dev)
          critical_count=$(echo "$audit_output" | jq '.metadata.vulnerabilities.critical // 0')
          high_count=$(echo "$audit_output" | jq '.metadata.vulnerabilities.high // 0')

          if [ "$critical_count" -gt 0 ]; then
            echo "❌ Found $critical_count critical vulnerabilities"
            exit 1
          elif [ "$high_count" -gt 0 ]; then
            echo "⚠️ Found $high_count high vulnerabilities"
            # Don't fail on high, just warn
          else
            echo "✅ No critical or high vulnerabilities found"
          fi